{% extends 'base.html.twig' %}

{% block title %}Mes Cours{% endblock %}
    
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/listCourse.css') }}">
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const courseContainer = document.querySelector('.cours');
            const paginationContainer = document.querySelector('.pagination');
            let itemsPerPage = 6;
            let currentPage = 1;
            let courses = [];
            let isFavorisActive = false;

            /*
            * Fonction pour récupérer les cours depuis l'API
             */
            function fetchCourses() {
                fetch('/api/my-courses')
                    .then(response => response.json())
                    .then(data => {
                        courses = data;
                        displayCourses(currentPage, itemsPerPage);
                        updatePagination();
                    })
                    .catch(error => console.error('Erreur lors de la récupération des cours :', error));
            }
            /*
            * Fonction pour afficher les cours dans le conteneur
            * @page : numéro de la page actuelle
            * @itemsPerPage : nombre d'éléments par page
             */
            function displayCourses(page, itemsPerPage) {
                courseContainer.innerHTML = '';
                const start = (page - 1) * itemsPerPage;
                const end = start + itemsPerPage;

                // Filtrer les cours en fonction du mode (Favoris ou Tout)
                const filteredCourses = isFavorisActive
                    ? courses.filter(course => course.favoris) // Afficher uniquement les favoris
                    : courses; // Afficher tous les cours

                // Afficher les cours de la page actuelle
                filteredCourses.slice(start, end).forEach(course => {
                    const courseElement = document.createElement('div');
                    courseElement.classList.add('case-cours');
                    courseElement.setAttribute('data-course-id', course.id);
                    courseElement.setAttribute('data-favoris', course.favoris);

                    courseElement.innerHTML = `
                <div class="star-icon">
                    <ion-icon name="${course.favoris ? 'star' : 'star-outline'}"></ion-icon>
                </div>
                <a href="/course/${course.code}" class="course-link">
                    <div class="course-image">
                        <img src="/images/${course.image ? course.image : 'course_image.png'}" alt="Image de ${course.nom}">
                    </div>
                    <div class="course-title">
                        <p>${course.nom} (${course.code})</p>
                        <div class="course-description">
                            <p>${course.description}</p>
                        </div>
                    </div>
                </a>
            `;

                    courseContainer.appendChild(courseElement);
                });
            }

            /*
            * Fonction pour mettre à jour la pagination
             */
            function updatePagination() {
                paginationContainer.innerHTML = '';
                const filteredCourses = isFavorisActive
                    ? courses.filter(course => course.favoris)
                    : courses;
                const totalPages = Math.ceil(filteredCourses.length / itemsPerPage);

                const prevButton = document.createElement('button');
                prevButton.classList.add('btn-pagination');
                prevButton.innerHTML = '<ion-icon name="caret-back-outline"></ion-icon>';
                prevButton.addEventListener('click', () => {
                    if (currentPage > 1) {
                        currentPage--;
                        displayCourses(currentPage, itemsPerPage);
                    }
                });
                paginationContainer.appendChild(prevButton);

                const nextButton = document.createElement('button');
                nextButton.classList.add('btn-pagination');
                nextButton.innerHTML = '<ion-icon name="caret-forward-outline"></ion-icon>';
                nextButton.addEventListener('click', () => {
                    if (currentPage < totalPages) {
                        currentPage++;
                        displayCourses(currentPage, itemsPerPage);
                    }
                });
                paginationContainer.appendChild(nextButton);
            }

            /*
            * Événements pour les boutons de tri et de filtre
             */
            // Événements pour le nombre de cours à afficher
            document.querySelectorAll('.tri-cours-5 .dropdown-item').forEach(item => {
                item.addEventListener('click', (event) => {
                    const selectedOption = event.target.textContent;
                    itemsPerPage = selectedOption.toLowerCase() === 'tous' ? courses.length : parseInt(selectedOption);
                    document.querySelector('.tri-cours-5 button').innerHTML = `Nombre de cours : ${selectedOption} <ion-icon name="caret-down-outline"></ion-icon>`;
                    currentPage = 1;
                    displayCourses(currentPage, itemsPerPage);
                    updatePagination();
                });
            });

            // Événements pour changer le mode d'affichage
            document.querySelectorAll('.tri-cours-4 .dropdown-item').forEach(item => {
                item.addEventListener('click', (event) => {
                    const mode = event.target.textContent.toLowerCase();
                    if (mode === 'carte') {
                        courseContainer.classList.add('carte-mode');
                        courseContainer.classList.remove('list-mode', 'description-mode');
                    } else if (mode === 'liste') {
                        courseContainer.classList.add('list-mode');
                        courseContainer.classList.remove('carte-mode', 'description-mode');
                    } else if (mode === 'résumé') {
                        courseContainer.classList.add('description-mode');
                        courseContainer.classList.remove('carte-mode', 'list-mode');
                    }
                    document.querySelector('.tri-cours-4 button').innerHTML = `${event.target.textContent} <ion-icon name="caret-down-outline"></ion-icon>`;
                });
            });

            // Événements pour le tri par Favoris
            document.querySelectorAll('.tri-cours-1 .dropdown-item').forEach(item => {
                item.addEventListener('click', (event) => {
                    const selectedOption = event.target.textContent;
                    isFavorisActive = selectedOption === 'Favoris'; // Activer/désactiver le mode favoris
                    document.querySelector('.tri-cours-1 button').innerHTML = `${selectedOption} <ion-icon name="caret-down-outline"></ion-icon>`;
                    currentPage = 1;
                    displayCourses(currentPage, itemsPerPage);
                    updatePagination();
                });
            });

            // Empecher le clic sur le lien de cours lorsque la souris est sur l'icône étoile
            courseContainer.addEventListener('mouseover', function (event) {
                const starIcon = event.target.closest('.star-icon');
                if (starIcon) {
                    const courseLink = starIcon.closest('.case-cours').querySelector('.course-link');
                    courseLink.style.pointerEvents = 'none'; // Désactive le clic sur le lien
                }
            });

            courseContainer.addEventListener('mouseout', function (event) {
                const starIcon = event.target.closest('.star-icon');
                if (starIcon) {
                    const courseLink = starIcon.closest('.case-cours').querySelector('.course-link');
                    courseLink.style.pointerEvents = 'auto'; // Réactive le clic sur le lien
                }
            });

            // Événements pour le clic sur l'icône étoile
            courseContainer.addEventListener('click', function(event) {
                const starIcon = event.target.closest('.star-icon');
                if (starIcon) {
                    event.stopPropagation();
                    const courseElement = starIcon.closest('.case-cours');
                    const courseId = courseElement.dataset.courseId;
                    // Envoyé les données au serveur pour mettre à jour l'état des favoris
                    fetch(`/api/toggle-favoris/${courseId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Mettre à jour l'état des favoris dans les données locales
                                const course = courses.find(c => c.id == courseId);
                                if (course) {
                                    course.favoris = data.isFavoris;
                                }

                                // Réafficher les cours en fonction du mode actuel
                                displayCourses(currentPage, itemsPerPage);
                                updatePagination();
                            } else {
                                console.error('Erreur lors de la mise à jour des favoris');
                            }
                        })
                        .catch(error => console.error('Erreur AJAX :', error));
                }
            });
            fetchCourses();
        });
    </script>
{% endblock %}

{% block body %}
<body>
<div class="content">
    <div class="container">
        <h1>Mes cours</h1>
        <div class="liste-cours">
            <h2>Vue d'ensemble des cours</h2>
            <div class="ligne-gris"></div>
            <div class="tri-course">
                <div class="liste-tri-cours">
                    <div class="tri-cours-1">
                            <button class="btn-tri-cours">Tout <ion-icon name="caret-down-outline"></ion-icon></button>
                            <ul class="dropdown">
                                <li><a href="#" class="dropdown-item">Tout</a></li>
                                <li class="dropdown-divider"></li>
                                <li><a href="#" class="dropdown-item">Favoris</a></li>
                            </ul>
                        </div>
                        <div class="tri-cours-2">
                            <input type="text" placeholder="Rechercher">
                        </div>
                        <div class="tri-cours-3">
                            <button class="btn-tri-cours">Trier par nom de cours <ion-icon name="caret-down-outline"></ion-icon></button>
                            <ul class="dropdown">
                                <li><a href="#" class="dropdown-item">Trier par nom de cours</a></li>
                                <li><a href="#" class="dropdown-item">Trier par dernier accès</a></li>  
                            </ul>
                        </div>
                        <div class="tri-cours-4">
                            <button class="btn-tri-cours">Carte <ion-icon name="caret-down-outline"></ion-icon></button>
                            <ul class="dropdown">
                                <li><a href="#" class="dropdown-item">Carte</a></li>
                                <li><a href="#" class="dropdown-item">Liste</a></li>
                                <li><a href="#" class="dropdown-item">Résumé</a></li>
                            </ul>
                        </div>
                        <div class="tri-cours-5">
                            <button class="btn-tri-cours">Nombre de cours : 6 <ion-icon name="caret-down-outline"></ion-icon></button>
                            <ul class="dropdown">
                                <li><a href="#" class="dropdown-item">6</a></li>
                                <li><a href="#" class="dropdown-item">12</a></li>
                                <li><a href="#" class="dropdown-item">18</a></li>
                                <li class="dropdown-divider"></li>
                                <li><a href="#" class="dropdown-item">Tous</a></li>
                            </ul>
                        </div>
                </div>
            </div>
            <div class="cours carte-mode">
                <!-- Les cours seront injectés ici -->
            </div>
            <div class="pagination">
                <!-- Pagination JS -->
            </div>
        </div>
    </div>
</div>


</body>
{% endblock %}
